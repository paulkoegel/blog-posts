<style>
  .teaser {
    background-position: center 55%; // 37%
    // background-image: url(https://farm7.staticflickr.com/6040/5911511885_3a3598f928_o.jpg) !important;
    background-image: url(https://farm1.staticflickr.com/398/18425297304_fe8f93b6bf_o.jpg) !important;
  }
  .teaser h1 {
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
  }
  .main-column h1 {
    display: none;
  }
</style>

Einführung in React
===================

_Dieser Artikel soll React vorstellen und anhand kleiner Beispiele in das Arbeiten mit React einführen. Wir beginnen mit der Frage, was React ist und was die Motivation war sie zu schreiben.  
Danach schauen wir uns die beiden wichtigsten Ideen hinter React an &ndash; die Komponentenarchitektur und den virtuellen DOM. Schließlich werden wir im Fazit Vor- und Nachteile von React betrachten und Kriterien bestimmen, wann ihr Einsatz besonders sinnvoll ist._

## Was ist React?
React ist eine JavaScript-Bibliothek zum Erstellen von Benutzeroberflächen. Sie wurde 2013 von Facebook unter [BSD-Lizenz](https://de.wikipedia.org/wiki/BSD-Lizenz) veröffentlicht und schlägt seitdem immer größere Wellen und beeinflusst nachhaltig die gesamte JavaScript-Frontendlandschaft.
Sie wird verwendet von Facebook, Instagram, Whatsapp, Yahoo, AirBnB, dem Atom-Editor und [vielen anderen mehr](https://github.com/facebook/react/wiki/Sites-Using-React).

React machte schnell vor allem wegen seines virtuellen DOMs und der hervorragenden Rendering-Performanz von sich reden. Daneben bietet es eine modulare Komponentenarchitektur, die als Basis für modularen und leicht nachzuvollziehenden Frontendcode dient.

Diese Neuerungen bringen auch Nichtvertrautes mit sich. Der Einstieg in React gelingt am besten, wenn man bereit ist, sich auf unkonventionelle Ideen einzulassen und alte Überzeugungen abzulegen.
Wir begreifen immer klarer, welche Vorteile die neuen Wege mit sich bringen, die React uns beschreiten lässt. Das Netz wimmelt vor begeisterten Erfahrungsberichten und Bibliotheken, die auf React aufbauen und immer mehr React-Anwendungen sprießen aus dem Boden.  
Höchste Zeit, dass wir uns React näher anschauen!

### Motivation hinter React
Facebooks Motivation hinter React war es, seinen Frontend-Code leichter verstehbar und besser wartbar zu machen. Vor React dauerte es lange, um sich das Verhalten von bestehendem Code zu vergegenwärtigen. Es gab Teile des Codes, die so komplex waren, dass niemand außer ein bestimmter Mitarbeiter sie anfassen wollte. Bugs wie unsynchronisierte Zähler ungelesener Nachrichten traten immer wieder auf. Allgemein gilt, dass je stärker gewachsener Code miteinander verwoben ist, desto schwieriger wird er zu warten.

Das Ziel von React ist es, _einfacheren_ Code schreiben zu können, dessen Bestandteile weniger miteinander verschränkt oder verwoben sind (der Wortursprung von [komplex](https://de.wiktionary.org/wiki/komplex)). Um das zu erreichen, war es nötig, nicht immer dem _leichtesten_ und vertrautesten Weg zu folgen (vgl. ["Simplicity Matters"](https://www.youtube.com/watch?v=rI8tNMsozo0) &ndash; [Rich Hickey](https://twitter.com/richhickey), vor allem die Unterscheidung zwischen _einfach_ (simple) und _leicht_ (easy)).

### Eine Bibliothek, kein Framework
React tritt als Bewerber im sogenannten [Javascript MV\*-Feld](http://todomvc.com) an, folgt jedoch weder der populärsten Ausprägung MVC, noch bedient es viel mehr als das "V" in MV\*.

React ist als Bibliothek konzipiert und möchte kein mächtiges Framework sein. So kann es ein höchstflexibles Werkzeug sein, das es erlaubt Anwendungen in der Sprache ihrer eigenen Problemdomäne &ndash; und nicht der Sprache eines Frameworks &ndash; zu modellieren.

Da React einem nicht die Grundstruktur seiner Anwendung vorschreibt (vgl. ["Architecture the Lost Years"](https://www.youtube.com/watch?v=WpkDN78P884) &ndash; [Robert Martin](https://twitter.com/unclebobmartin)), schränkt es einen weniger ein und lässt sich hervorragend in bestehende Codebasen integrieren, ohne dass ich dort alles Umstricken müsste.

### Reacts Bauteile
Im wesentlichen besteht React aus folgenden Bestandteilen:

+ Virtueller DOM
+ Komponentenarchitektur
+ Browserkompatibilität:  
synthetische Events, um jQuery-artig Browserunterschiede wegzuabstrahieren

### Komponentenarchitektur

## Virtueller DOM

## Komponentenarchitektur

## Beispiele

zähl-button:
http://jsbin.com/qatoziziku/1/edit?html,js,output

zähl-button mit state:
http://jsbin.com/tuzuxufiwu/1/edit?html,js,output

toggler:
http://jsbin.com/tuliginexu/edit?html,css,js,output

## Fazit

## Die Leute hinter React
+ Jordan Walke
+ [Pete Hunt](https://twitter.com/floydophone)
+ [Christopher Chedeau](https://twitter.com/vjeux)
+ [Jing Chen](https://twitter.com/jingc?lang=en)


## Anhang
### Links
+ ["Legal"-Datei zur Lizenz](https://code.facebook.com/posts/1639473982937255/updating-our-open-source-patent-grant)

### Bildquellen
Titelfoto: "The Rolling Stones". Riksarkivet (National Archives of Norway). Flickr Commons. [https://www.flickr.com/photos/national\_archives\_of\_norway/18425297304](https://www.flickr.com/photos/national_archives_of_norway/18425297304).

(Titelfoto: "Båttur - boat trip" - Riksarkivet (National Archives of Norway). Flickr Commons. [https://www.flickr.com/photos/national\_archives\_of\_norway/5911511885/in/photolist-a1o3wH-4S5xuZ-ottpUM-cX64W5-dS6Sag-dWkhBz-7FWLdA-6GXWyP-dT8MFR-6BcTtm-4ibe2u-4ibz5j-4jyAhF-8zNQoo-6BanPQ-jLXw4p-6B8Jpp-6B6fKZ-cyDYJA-6B69Qv-6B8LoF-6BcTmS-6BcSLj-6BajVC-6DHJbf-8m4xkr-6BcREL-8m4nSp-6F6FLG-8m7Pko-6DDChR-6F6EW1-8m7GdE-hnbEqB-6DHJx7-6z3FVL-6DDynP-6F2sZR-8trfuC-8trbYm-eWxkzH-8raxZg-6F2syk-6Badb3-cyDYpo-6PqCUT-6B8JK8-6F6GmE-6yYz9X-6BcRzb](https://www.flickr.com/photos/national_archives_of_norway/5911511885/in/photolist-a1o3wH-4S5xuZ-ottpUM-cX64W5-dS6Sag-dWkhBz-7FWLdA-6GXWyP-dT8MFR-6BcTtm-4ibe2u-4ibz5j-4jyAhF-8zNQoo-6BanPQ-jLXw4p-6B8Jpp-6B6fKZ-cyDYJA-6B69Qv-6B8LoF-6BcTmS-6BcSLj-6BajVC-6DHJbf-8m4xkr-6BcREL-8m4nSp-6F6FLG-8m7Pko-6DDChR-6F6EW1-8m7GdE-hnbEqB-6DHJx7-6z3FVL-6DDynP-6F2sZR-8trfuC-8trbYm-eWxkzH-8raxZg-6F2syk-6Badb3-cyDYpo-6PqCUT-6B8JK8-6F6GmE-6yYz9X-6BcRzb).)
